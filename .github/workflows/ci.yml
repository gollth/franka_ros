name: CI

on: 
  pull_request:
    branches: 
    - kinetic-devel
    - melodic-devel
    - noetic-devel
    
jobs:
  catkin:
    runs-on: ubuntu-latest
    steps:
    - name: Prepare
      # Keep the compilation outputs persitant outside the docker container to use for the other steps
      run: |
        mkdir -p ${{github.workspace}}/src       # where the repo will be cloned into
        mkdir -p ${{github.workspace}}/build     # compilation cache for formatter & linter
        mkdir -p ${{github.workspace}}/devel     # compilation cache for formatter & linter
        
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: src/franka_ros
    
    - name: Parse ROS Distro
      run:  echo "ROS_DISTRO=$(echo ${{ github.event.pull_request.base.ref }} | sed 's/-devel//')" >> $GITHUB_ENV
    
    - name: Build Docker Image
      uses: docker/build-push-action@v2
      with:
        tags: franka_ros:${{env.ROS_DISTRO}}
        file: .ci/Dockerfile.${{env.ROS_DISTRO}}
        push: false
   
    - name: Compile with Catkin Tools
      uses: addnab/docker-run-action@v3
      with:
        image:    franka_ros:${{env.ROS_DISTRO}}
        options:  -v ${{github.workspace}}/src:/ros/src/  # only mount source here
        run: |
          catkin config --workspace /ros/ --init --extend /opt/ros/${{env.ROS_DISTRO}} --cmake-args -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          catkin build --workspace /ros/ --interleave-output --verbose
          
    - name: Compile with Catkin Make
      uses: addnab/docker-run-action@v3
      with:
        image:    franka_ros:${{env.ROS_DISTRO}}
        options:  -v ${{github.workspace}}:/ros
        shell:    bash
        run: |
          source /opt/ros/${{env.ROS_DISTRO}}/setup.bash
          catkin_init_workspace /ros/src
          cd /ros
          catkin_make -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          
    - name: Check Format
      uses: addnab/docker-run-action@v3
      with: 
        image:    franka_ros:${{env.ROS_DISTRO}}
        options:  -v ${{github.workspace}}:/ros/
        shell:    bash
        run: |
          source /ros/devel/setup.bash
          cmake --build /ros/build --target check-format
          
    - name: Check Linting
      uses: addnab/docker-run-action@v3
      with: 
        image:    franka_ros:${{env.ROS_DISTRO}}
        options:  -v ${{github.workspace}}:/ros/
        shell:    bash
        run: |
          source /ros/devel/setup.bash
          cmake --build /ros/build --target check-format

    - name: Run Tests
      uses: addnab/docker-run-action@v3
      with:
        image:    franka_ros:${{env.ROS_DISTRO}}
        options:  -v ${{github.workspace}}:/ros/
        shell:    bash
        run: |
          source /ros/devel/setup.bash
          cd /ros
          catkin_make run_tests
    
    - name: Upload Tests to Artifacts
      uses: actions/upload-artifacts@v2
      if:   success() || failure()    # run this step even if previous step failed
      with:
        name: test-results
        path: build/test_results/*/rosunit-*.xml
        
    - name: Create Test Report
      uses: dorny/test-reporter@v1
      with:
        artifacts: test-tesults
        name:      ROS-Unit Tests
        path:      '*.xml'           # Path to test results (inside artifact .zip)
        reporter:  java-junit
